{"version":3,"sources":["Core/selectors.ts","Core/components/Label.tsx","Auth/auth-helpers/constants.ts","Auth/auth-helpers/sagas.ts","Auth/auth-helpers/typeKeys.ts","Auth/auth-helpers/index.ts","Core/types.ts","Core/services.ts","Core/reducer.ts","Core/sagas.ts","Auth/auth-helpers/reducer.ts","Auth/auth-helpers/selectors.ts","Data/reducer.ts","Data/sagas.ts","Data/components/Header.tsx","Data/components/Code.tsx","Data/components/Paper.tsx","Data/components/Clusters.tsx","Data/googleProvider.ts","Data/components/Map.tsx","Data/selectors.ts","Data/components/Parameters/AhcParameters.tsx","Data/components/Parameters/Parameters.tsx","Data/components/PointsGroup.tsx","Data/components/PointsGroupList.tsx","Data/components/PointsGroupControls.tsx","Data/components/MapControls.tsx","Data/components/MapPage.tsx","Data/components/Summary.tsx","Data/constants.ts","Auth/auth-helpers/actions.ts","Data/index.ts","App.tsx","services.ts","serviceWorker.ts","sagas.ts","reducer.ts","store.ts","index.tsx","Core/constants.ts","Core/components/AppBar.tsx","Core/components/FileUploadForm.tsx","Core/components/Footer.tsx","Core/components/Landing.tsx","Core/actions.ts","Core/components/TitleWrapper.tsx","secrets.ts","Auth/auth-helpers/services.ts","Data/actions.ts"],"names":["getDatabaseSettingValue","state","settingId","databaseSetting","core","databaseSettings","find","ds","settingValue","undefined","Label","children","color","StyledLabel","sizeVariant","colorVariant","styled","props","api","localStorageKeys","handleLoginAsync","watchHandleLogin","handleAuthenticateWithGoogleAsync","watchAuthenticateWithGoogle","handleRegisterAsync","watchHandleRegister","handleLogOutLocalStorage","watchHandleLogOutLocalStorage","handlePopulateUserStateFromLocalStorageIfAvailable","watchHandlePopulateUserStateFromLocalStorageIfAvailable","action","call","axios","post","payload","loginInfo","data","userId","Error","addTokenToDefaultHeader","token","addToLocalStorage","actions","additionalActions","map","f","put","push","login","success","all","failure","takeLatest","typeKeys","LOGIN","formattedGoogleResponse","name","googleLoginResponse","getBasicProfile","getName","email","getEmail","getAuthResponse","id_token","authenticateWithGoogle","AUTHENTICATE_WITH_GOOGLE","register","REGISTER","isInLocalStorage","removeFromLocalStorage","logout","LOGOUT","storedUser","localStorage","getItem","user","JSON","parse","populateUserStateFromLocalStorageIfAvailable","POPULATE_USER_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE","authSagas","ItemPermissionType","randomColor","require","key","getFromLocalStorage","item","removeItem","value","setItem","stringify","getColors","count","opacity","luminosity","storedDatabaseSettings","sessionStorage","coreSessionStorageKeys","initialState","coreReducer","type","coreTypeKeys","GET_DATABASE_SETTINGS_SUCCEEDED","produce","draftState","handleGetDatabaseSettingsAsync","watchGetDatabaseSettings","get","coreApi","getDatabaseSettings","takeEvery","GET_DATABASE_SETTINGS","coreSagas","authenticationInfo","error","authReducer","LOGIN_SUCCEEDED","LOGIN_FAILED","REGISTER_SUCCEEDED","REGISTER_FAILED","LOGOUT_SUCCEEDED","LOGOUT_FAILED","POPULATE_USER_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE_SUCCEEDED","POPULATE_USER_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE_FAILED","getIsAuthenticated","auth","pointsGroups","currentClusterOption","label","clusterTypes","ahcs","dataReducer","dataTypeKeys","GET_POINTS_GROUPS_SUCCEEDED","combinedPointsGroups","ensureActivePointsGroup","filter","removeDuplicatePointsGroups","withColors","POPULATE_POINTS_GROUPS_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE_SUCCEEDED","CREATE_POINTS_GROUP_SUCCEEDED","toSavedPointsGroups","asInactive","unshift","isActive","CREATE_POINTS_GROUP_FAILED","ADD_POINTS_GROUP_SUCCEEDED","SAVE_POINTS_GROUP_IF_STORED_LOCALLY_SUCCEEDED","replaceUnsavedPointsGroup","DELETE_POINTS_GROUP_SUCCEEDED","pg","pointsGroupId","SET_ACTIVE_POINTS_GROUP","setActivePointsGroup","REMOVE_SAVED_AND_PRIVATE_POINTS_GROUPS","itemPermissionType","Public","withFirstPointsGroupActive","SET_CLUSTER_COUNT","clusterCount","i","length","sort","defaultsAreLastAndDefaultsAreFirst","calculationOutput","orderedPoints","pointsColors","pointsGroup","index","indexOf","newPointsGroup","getPointsGroupsAsync","watchGetPointsGroups","createPointsGroupAsync","watchCreatePointsGroup","addPointsGroupAsync","watchAddPointsGroup","handlePopulatePointsGroupsFromLocalStorageIfAvailable","watchPopulatePointsGroupsFromLocalStorageIfAvailable","savePointsGroupAsync","watchSavePointsGroup","deletePointsGroupAsync","watchDeletePointsGroup","pointsGroupApi","getPointsGroups","console","GET_POINTS_GROUPS","file","createPointsGroup","formHeaders","CREATE_POINTS_GROUP","addPointsGroup","ADD_POINTS_GROUP","populatePointsGroupsStateFromLocalStorageIfAvailable","POPULATE_POINTS_GROUPS_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE","savePointsGroup","savePointsGroupIfStoredLocally","SAVE_POINTS_GROUP_IF_STORED_LOCALLY","delete","deletePointsGroup","DELETE_POINTS_GROUP","dataSagas","Header","spacing","React","ThemeContext","weightVariant","style","marginBottom","ss4","StyledCode","p","colors","cs2","cs6","borderRadius","br1","Code","border","Paper","defaultStyle","padding","ss6","height","paperStyle","Clusters","activePointsGroup","clusteredPoints","getClusters","clusterIds","Set","cp","clusterId","asRenderedPoints","pointId","renderedClusteredPoints","a","b","c","renderedPoints","intraclusterDistances","clusteringSummaries","icd","distance","display","flexDirection","alignItems","width","justifyContent","Cluster","ClustersWrapper","ss2","div","ahc","clusterSnapshots","getCircle","circle","google","maps","SymbolPath","CIRCLE","log","Map","MapInternal","compose","withProps","googleMapURL","loadingElement","backgroundColor","containerElement","mapElement","withScriptjs","withGoogleMap","defaultPosition","lat","averageVerticalDisplacement","lng","averageHorizontalDisplacement","markers","getMarkers","polylines","getPolylines","defaultZoom","defaultCenter","center","renderMarkers","renderPolylines","polylineProps","plp","path","options","geodesic","strokeColor","strokeOpacity","strokeWeight","reduce","agg","cur","arr","cs","orderId","latLng","verticalDisplacement","horizontalDisplacement","x","marker","icon","fillColor","scale","fillOpacity","position","text","fontSize","points","mp","pointsGroupsSelector","createSelector","getActivePointsGroup","AhcParameters","min","max","handleClusterCountChange","onClusterCountChange","Wrapper","onChange","newIterations","ParametersInternal","handleClusterCountChangeInternal","onSetClusterCount","this","maxClusters","Parameters","connect","dispatch","bindActionCreators","setClusterCount","maximumDistanceBetweenPoints","minimumPointsPerCluster","shouldShowDeleteButton","isHovering","isHoveringOverDeleteButton","PointsGroup","handleDeletePointsGroup","request","handleSetActivePointsGroup","setIsHovering","setIsHoveringOverDeleteButton","handleDeletePointsGroupInternal","transitions","PointsGroupWrapper","onMouseEnter","onMouseLeave","onClick","ss3","ss64","ss12","cs4","background","fast","PointsGroupList","PointsGroupControls","useSelector","MapControls","MapPage","marginTop","Divider","neutral","Summary","clusteringSummary","averageClusterSize","averageIntraclusterDistance","interclusterDistance","TitleWrapper","TextWrapper","none","mapFormFields","headers","apiKey","registerInfo","AUTHENTICATE_WITH_GOOGLE_SUCCEEDED","AUTHENTICATE_WITH_GOOGLE_FAILED","defaults","baseURL","productionUrl","inputs","typography","fontFamily","title","App","Provider","getThemeFromNewInputs","Boolean","window","location","hostname","match","rootSaga","allSagas","s","fork","rootReducer","combineReducers","routing","routerReducer","sagaMiddleware","createSagaMiddleware","store","history","middleware","routerMiddleware","enhancers","intermediateStore","createStore","applyMiddleware","run","configureStore","createBrowserHistory","initialReduxState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","settingIds","appName","AppBar","styleVariant","FileUploadFormInternal","handleFileChange","fileList","FormData","append","isAuthenticated","onCreatePointsGroup","onAddPointsGroup","labelOnUpload","useMargin","inputInfo","FileUploadForm","Footer","Landing","useDispatch","GET_DATABASE_SETTINGS_FAILED","Axios","common","Authorization","ADD_POINTS_GROUP_FAILED","SAVE_POINTS_GROUP_IF_STORED_LOCALLY_FAILED","GET_POINTS_GROUPS_FAILED"],"mappings":"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","file":"static/js/main.f8100134.chunk.js","sourcesContent":["import { ICoreState } from \"./reducer\";\n\ninterface IExpectedReduxState {\n\tcore: ICoreState;\n}\n\nexport const coreSelector = (state: IExpectedReduxState) => state.core;\nexport const databaseSettingsSelector = (state: IExpectedReduxState) =>\n\tcoreSelector(state).databaseSettings;\n\n// TODO: memoize if not already\nexport const getDatabaseSettingValue = (\n\tstate: IExpectedReduxState,\n\tsettingId: string\n) => {\n      \n\tconst databaseSetting = state.core.databaseSettings.find(\n\t\tds => ds.settingId === settingId\n\t);\n\n\treturn (databaseSetting && databaseSetting.settingValue) || undefined;\n};\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Typography } from \"@nickjmorrow/react-component-library\";\n\nexport const Label: React.SFC<IOwnProps> = ({ children, color }) => {\n\treturn (\n\t\t<StyledLabel color={\"red\"}>\n\t\t\t<Typography sizeVariant={2} colorVariant={\"primaryLight\"}>\n\t\t\t\t{children}\n\t\t\t</Typography>\n\t\t</StyledLabel>\n\t);\n};\n\nconst StyledLabel = styled(\"span\")<{ color: string }>`\n\ttext-transform: uppercase;\n\tcolor: ${props => props.color};\n\tdisplay: flex;\n\talign-items: center;\n`;\n\ninterface IOwnProps {\n\tchildren: string;\n\tcolor?: string;\n}\n","export const api = {\n\tregister: \"/api/auth/register\",\n\tlogin: \"/api/auth/login\",\n\tlogout: \"/api/auth/logout\",\n\tauthenticateWithGoogle: \"/api/auth/authenticatewithgoogle\",\n\ttoggleFavoriteItem: (itemId: number) =>\n\t\t`api/userItem/toggleFavoriteItem?itemId=${itemId}`,\n\tgetUserFavoriteItems: \"api/userItem/getUserFavoriteItems\"\n};\n\nexport const USER = \"USER\";\n\nexport const localStorageKeys = {\n\tuser: \"USER\"\n};\n","import axios from \"axios\";\nimport { addTokenToDefaultHeader } from \"./services\";\nimport { localStorageKeys, api } from \"./constants\";\nimport { User } from \"./types\";\nimport { all, call, put, PutEffect, takeLatest } from \"redux-saga/effects\";\nimport {\n\tlogin,\n\tregister,\n\tlogout,\n\tauthenticateWithGoogle,\n\tpopulateUserStateFromLocalStorageIfAvailable\n} from \"./actions\";\nimport { typeKeys } from \"./typeKeys\";\n\nimport {\n\taddToLocalStorage,\n\tremoveFromLocalStorage,\n\tisInLocalStorage\n} from \"Core\";\n\nfunction* handleLoginAsync(action: ReturnType<typeof login.request>) {\n\ttry {\n\t\tconst { data } = yield call(\n\t\t\taxios.post,\n\t\t\tapi.login,\n\t\t\taction.payload.loginInfo\n\t\t);\n\t\t// TODO: decode token to ensure it hasnt expired\n\t\tif (!data.userId) {\n\t\t\tthrow new Error(\"UserId not found in payload.\");\n\t\t}\n\t\taddTokenToDefaultHeader(data.token);\n\t\taddToLocalStorage(data, localStorageKeys.user);\n\n\t\tconst actions = action.payload.additionalActions\n\t\t\t? [...action.payload.additionalActions.map(f => put(f()))]\n\t\t\t: [];\n\t\tactions.push(put(login.success(data)));\n\t\tyield all(actions);\n\t} catch (error) {\n\t\tyield put(login.failure(error));\n\t}\n}\n\nfunction* watchHandleLogin() {\n\tyield takeLatest(typeKeys.LOGIN, handleLoginAsync);\n}\n\nexport function* handleAuthenticateWithGoogleAsync(\n\taction: ReturnType<typeof authenticateWithGoogle.request>\n) {\n\tconst { payload } = action;\n\tconst formattedGoogleResponse = {\n\t\tname: payload.googleLoginResponse.getBasicProfile().getName(),\n\t\temail: payload.googleLoginResponse.getBasicProfile().getEmail(),\n\t\ttoken: payload.googleLoginResponse.getAuthResponse().id_token\n\t};\n\n\ttry {\n\t\t// TODO: what type is this?\n\t\tconst { data } = yield call(\n\t\t\taxios.post,\n\t\t\tapi.authenticateWithGoogle,\n\t\t\tformattedGoogleResponse\n\t\t);\n\t\taddTokenToDefaultHeader(data.token);\n\t\taddToLocalStorage(data, localStorageKeys.user);\n\t\tconst actions = action.payload.additionalActions\n\t\t\t? [...action.payload.additionalActions.map(f => put(f()))]\n\t\t\t: [];\n\t\tactions.push(put(authenticateWithGoogle.success(data)));\n\t\tyield all(actions);\n\t} catch (error) {\n\t\tyield put(authenticateWithGoogle.failure(error));\n\t}\n}\n\nexport function* watchAuthenticateWithGoogle() {\n\tyield takeLatest(\n\t\ttypeKeys.AUTHENTICATE_WITH_GOOGLE,\n\t\thandleAuthenticateWithGoogleAsync\n\t);\n}\n\nfunction* handleRegisterAsync(action: ReturnType<typeof register.request>) {\n\ttry {\n\t\tconst { data } = yield call(axios.post, api.register, action.payload);\n\t\tyield put(register.success(data));\n\t} catch (error) {\n\t\tyield put(register.failure(error));\n\t}\n}\n\nfunction* watchHandleRegister() {\n\tyield takeLatest(typeKeys.REGISTER, handleRegisterAsync);\n}\n\nfunction* handleLogOutLocalStorage(action: ReturnType<typeof logout.request>) {\n\ttry {\n\t\tif (isInLocalStorage(localStorageKeys.user)) {\n\t\t\tremoveFromLocalStorage(localStorageKeys.user);\n\t\t}\n\t\tconst actions: Array<PutEffect<any>> = action.payload\n\t\t\t? [...action.payload.map(f => put(f()))]\n\t\t\t: [];\n\t\tactions.push(put(logout.success()));\n\t\tyield all(actions);\n\t} catch (error) {\n\t\tyield put(logout.failure(error));\n\t}\n}\n\nfunction* watchHandleLogOutLocalStorage() {\n\tyield takeLatest(typeKeys.LOGOUT, handleLogOutLocalStorage);\n}\n\nfunction* handlePopulateUserStateFromLocalStorageIfAvailable() {\n\ttry {\n\t\tconst storedUser = localStorage.getItem(localStorageKeys.user);\n\t\tif (storedUser !== null) {\n\t\t\tconst user: User = JSON.parse(storedUser);\n\t\t\taddTokenToDefaultHeader(user.token);\n\t\t\tyield put(\n\t\t\t\tpopulateUserStateFromLocalStorageIfAvailable.success(user)\n\t\t\t);\n\t\t}\n\t} catch (error) {\n\t\tyield put(populateUserStateFromLocalStorageIfAvailable.failure(error));\n\t}\n}\n\nfunction* watchHandlePopulateUserStateFromLocalStorageIfAvailable() {\n\tyield takeLatest(\n\t\ttypeKeys.POPULATE_USER_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE,\n\t\thandlePopulateUserStateFromLocalStorageIfAvailable\n\t);\n}\n\nexport const authSagas = [\n\twatchHandleLogin,\n\twatchAuthenticateWithGoogle,\n\twatchHandleRegister,\n\twatchHandleLogOutLocalStorage,\n\twatchHandlePopulateUserStateFromLocalStorageIfAvailable\n];\n","export enum typeKeys {\n\tLOGIN = \"LOGIN\",\n\tLOGIN_SUCCEEDED = \"LOGIN_SUCCEEDED\",\n\tLOGIN_FAILED = \"LOGIN_FAILED\",\n\tREGISTER = \"REGISTER\",\n\tREGISTER_SUCCEEDED = \"REGISTER_SUCCEEDED\",\n\tREGISTER_FAILED = \"REGISTER_FAILED\",\n\tLOGOUT = \"LOGOUT\",\n\tLOGOUT_SUCCEEDED = \"LOGOUT_SUCCEEDED\",\n\tLOGOUT_FAILED = \"LOGOUT_FAILED\",\n\tAUTHENTICATE_WITH_GOOGLE = \"AUTHENTICATE_WITH_GOOGLE\",\n\tAUTHENTICATE_WITH_GOOGLE_SUCCEEDED = \"AUTHENTICATE_WITH_GOOGLE_SUCCEEDED\",\n\tAUTHENTICATE_WITH_GOOGLE_FAILED = \"AUTHENTICATE_WITH_GOOGLE_FAILED\",\n\tPOPULATE_USER_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE = \"POPULATE_USER_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE\",\n\tPOPULATE_USER_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE_SUCCEEDED = \"POPULATE_USER_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE_SUCCEEDED\",\n\tPOPULATE_USER_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE_FAILED = \"POPULATE_USER_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE_FAILED\"\n}\n","export * from \"./sagas\";\nexport * from \"./actions\";\nexport * from \"./reducer\";\nexport * from \"./selectors\";\nexport * from \"./services\";\nexport * from \"./typeKeys\";\nexport * from \"./types\";\n","export type IError = string;\n\nexport enum ItemPermissionType {\n\tPrivate = 1,\n\tPublic = 2\n}\n\nexport interface DatabaseSetting {\n\tsettingId: string;\n\tsettingValue: string;\n}\n","const randomColor = require('randomcolor');\n\nexport const isInLocalStorage = (key: string): boolean => localStorage.getItem(key) !== null;\n\nexport const getFromLocalStorage = (key: string) => {\n\tconst item = localStorage.getItem(key);\n\treturn item ? JSON.parse(item) : null;\n};\n\nexport const removeFromLocalStorage = (key: string) => localStorage.removeItem(key);\n\nexport const addToLocalStorage = (value: object, key: string) => {\n\tlocalStorage.setItem(key, JSON.stringify(value));\n};\n\nexport const addToLocalStorageIfNotPresent = (value: object, key: string) => {\n\tif (!isInLocalStorage(key)) {\n\t\taddToLocalStorage(value, key);\n\t}\n};\n\nexport const getColors = (count: number) =>\n\trandomColor({\n\t\tcount,\n\t\topacity: 0.9,\n\t\tluminosity: 'dark',\n\t});\n","import { ActionType } from \"typesafe-actions\";\nimport * as actions from \"./actions\";\nimport { coreTypeKeys } from \"./actions\";\nimport { DatabaseSetting } from \"./types\";\nimport produce from \"immer\";\nimport { coreSessionStorageKeys } from \"./constants\";\n\nexport interface ICoreState {\n\treadonly databaseSettings: DatabaseSetting[];\n}\n\nconst storedDatabaseSettings = sessionStorage.getItem(\n\tcoreSessionStorageKeys.databaseSettings\n);\n\nlet databaseSettings = [];\n\nif (storedDatabaseSettings) {\n\tdatabaseSettings = JSON.parse(storedDatabaseSettings);\n}\n\nexport const initialState: ICoreState = {\n\tdatabaseSettings\n};\n\nexport const coreReducer = (\n\tstate: ICoreState = initialState,\n\taction: ActionType<typeof actions>\n): ICoreState => {\n\tswitch (action.type) {\n\t\tcase coreTypeKeys.GET_DATABASE_SETTINGS_SUCCEEDED:\n\t\t\treturn produce(state, draftState => {\n\t\t\t\tdraftState.databaseSettings = action.payload;\n\t\t\t});\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import axios from \"axios\";\nimport { coreApi } from \"Core\";\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport { coreTypeKeys, getDatabaseSettings } from \"./actions\";\nimport { coreSessionStorageKeys } from \"./constants\";\n\nfunction* handleGetDatabaseSettingsAsync() {\n\ttry {\n\t\tconst { data } = yield call(axios.get, coreApi.getDatabaseSettings);\n\t\tyield put(getDatabaseSettings.success(data));\n\n\t\tsessionStorage.setItem(\n\t\t\tcoreSessionStorageKeys.databaseSettings,\n\t\t\tJSON.stringify(data)\n\t\t);\n\t} catch (error) {\n\t\tyield put(getDatabaseSettings.failure(error));\n\t}\n}\n\nfunction* watchGetDatabaseSettings() {\n\tyield takeEvery(\n\t\tcoreTypeKeys.GET_DATABASE_SETTINGS,\n\t\thandleGetDatabaseSettingsAsync\n\t);\n}\n\nexport const coreSagas = [watchGetDatabaseSettings];\n","import { User } from \"./types\";\nimport { typeKeys } from \"./typeKeys\";\nimport { ActionType } from \"typesafe-actions\";\nimport * as actions from \"./actions\";\n\nexport interface AuthState {\n\treadonly authenticationInfo: User | null;\n\treadonly error: string | null;\n}\n\nconst initialState: AuthState = {\n\tauthenticationInfo: null,\n\terror: null\n};\n\nexport const authReducer = (\n\tstate: AuthState,\n\taction: ActionType<typeof actions>\n): AuthState => {\n\tstate = state || initialState;\n\n\tswitch (action.type) {\n\t\tcase typeKeys.LOGIN_SUCCEEDED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthenticationInfo: action.payload,\n\t\t\t\terror: null\n\t\t\t};\n\t\tcase typeKeys.LOGIN_FAILED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: action.payload\n\t\t\t};\n\t\tcase typeKeys.REGISTER_SUCCEEDED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthenticationInfo: action.payload,\n\t\t\t\terror: null\n\t\t\t};\n\t\tcase typeKeys.REGISTER_FAILED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: action.payload\n\t\t\t};\n\t\tcase typeKeys.LOGOUT_SUCCEEDED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthenticationInfo: null,\n\t\t\t\terror: null\n\t\t\t};\n\t\tcase typeKeys.LOGOUT_FAILED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: action.payload\n\t\t\t};\n\t\tcase typeKeys.POPULATE_USER_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE_SUCCEEDED: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthenticationInfo: action.payload,\n\t\t\t\terror: null\n\t\t\t};\n\t\t}\n\t\tcase typeKeys.POPULATE_USER_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE_FAILED: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: action.payload\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { NecessaryReduxState } from \"./types\";\n\n// TODO: should check expiration of token\nexport const getIsAuthenticated = (state: NecessaryReduxState): boolean => {\n\treturn (\n\t\tstate.auth.authenticationInfo !== null &&\n\t\tstate.auth.authenticationInfo.token !== null\n\t);\n};\n","import produce from 'immer';\nimport { IOption } from '@nickjmorrow/react-component-library';\nimport { ActionType } from 'typesafe-actions';\nimport { getColors, ItemPermissionType } from '../Core';\nimport * as actions from './actions';\nimport { dataTypeKeys } from './actions';\nimport { clusterTypes } from './constants';\nimport { IPointsGroup } from './types';\n// import { css } from 'react-select/lib/components/SingleValue';\n\nexport interface IDataState {\n\treadonly error: string;\n\treadonly pointsGroups: IPointsGroup[];\n\treadonly currentClusterOption: IOption;\n}\n\nexport const initialState: IDataState = {\n\tpointsGroups: [],\n\terror: '',\n\tcurrentClusterOption: {\n\t\tlabel: 'Agglomerative Hierarchical Clustering',\n\t\tvalue: clusterTypes.ahcs,\n\t},\n};\n\nexport const dataReducer = (state: IDataState = initialState, action: ActionType<typeof actions>): IDataState => {\n\tswitch (action.type) {\n\t\tcase dataTypeKeys.GET_POINTS_GROUPS_SUCCEEDED:\n\t\t\treturn produce(state, draftState => {\n\t\t\t\tconst combinedPointsGroups = [...state.pointsGroups, ...action.payload];\n\t\t\t\tconst pointsGroups = ensureActivePointsGroup(\n\t\t\t\t\tcombinedPointsGroups.filter(removeDuplicatePointsGroups),\n\t\t\t\t).map(withColors);\n\t\t\t\tdraftState.pointsGroups = pointsGroups;\n\t\t\t});\n\t\tcase dataTypeKeys.POPULATE_POINTS_GROUPS_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE_SUCCEEDED:\n\t\tcase dataTypeKeys.CREATE_POINTS_GROUP_SUCCEEDED:\n\t\t\treturn produce(state, draftState => {\n\t\t\t\tconst pointsGroups = state.pointsGroups.filter(toSavedPointsGroups).map(asInactive);\n\t\t\t\tpointsGroups.unshift({ ...action.payload, isActive: true });\n\t\t\t\tdraftState.pointsGroups = ensureActivePointsGroup(pointsGroups.map(withColors));\n\t\t\t});\n\t\tcase dataTypeKeys.CREATE_POINTS_GROUP_FAILED:\n\t\t\treturn { ...state, error: action.payload };\n\t\tcase dataTypeKeys.ADD_POINTS_GROUP_SUCCEEDED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpointsGroups: ensureActivePointsGroup(\n\t\t\t\t\t[{ ...action.payload, isActive: true }, ...state.pointsGroups.map(asInactive)].map(withColors),\n\t\t\t\t),\n\t\t\t};\n\t\tcase dataTypeKeys.SAVE_POINTS_GROUP_IF_STORED_LOCALLY_SUCCEEDED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpointsGroups: ensureActivePointsGroup(\n\t\t\t\t\tstate.pointsGroups.map(replaceUnsavedPointsGroup(action.payload)).map(withColors),\n\t\t\t\t),\n\t\t\t};\n\t\tcase dataTypeKeys.DELETE_POINTS_GROUP_SUCCEEDED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpointsGroups: ensureActivePointsGroup(\n\t\t\t\t\tstate.pointsGroups.filter(pg => pg.pointsGroupId !== action.payload),\n\t\t\t\t),\n\t\t\t};\n\t\tcase dataTypeKeys.SET_ACTIVE_POINTS_GROUP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpointsGroups: state.pointsGroups.map(setActivePointsGroup(action.payload)),\n\t\t\t};\n\t\tcase dataTypeKeys.REMOVE_SAVED_AND_PRIVATE_POINTS_GROUPS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpointsGroups: state.pointsGroups\n\t\t\t\t\t.filter(pg => !pg.pointsGroupId || pg.itemPermissionType === ItemPermissionType.Public)\n\t\t\t\t\t.map(withFirstPointsGroupActive),\n\t\t\t};\n\t\tcase dataTypeKeys.SET_CLUSTER_COUNT:\n\t\t\tconst { pointsGroupId, clusterCount } = action.payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpointsGroups: state.pointsGroups.map(pg =>\n\t\t\t\t\tpg.pointsGroupId === pointsGroupId ? { ...pg, clusterCount } : pg,\n\t\t\t\t),\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst setActivePointsGroup = (pointsGroupId: number | undefined) => (pg: IPointsGroup) =>\n\tpg.pointsGroupId === pointsGroupId ? { ...pg, isActive: true } : { ...pg, isActive: false };\n\nconst withFirstPointsGroupActive = (pg: IPointsGroup, i: number): IPointsGroup =>\n\ti === 0 ? { ...pg, isActive: true } : { ...pg, isActive: false };\n\nconst ensureActivePointsGroup = (pointsGroups: IPointsGroup[]) => {\n\tconst hasActivePointsGroup = pointsGroups.filter(pg => pg.isActive).length > 0;\n\tconst pointsGroupsWithActive = hasActivePointsGroup\n\t\t? pointsGroups.sort(defaultsAreLastAndDefaultsAreFirst)\n\t\t: pointsGroups.sort(defaultsAreLastAndDefaultsAreFirst).map(withFirstPointsGroupActive);\n\treturn pointsGroupsWithActive.map(pg => {\n\t\tif (!pg.clusterCount) {\n\t\t\tpg.clusterCount = pg.calculationOutput.orderedPoints.length;\n\t\t}\n\t\treturn pg;\n\t});\n};\n\nconst defaultsAreLastAndDefaultsAreFirst = (pg: IPointsGroup) =>\n\tpg.itemPermissionType === ItemPermissionType.Public ? -1 : pg.pointsGroupId === undefined ? 1 : 0;\n\nconst withColors = (pg: IPointsGroup): IPointsGroup => ({\n\t...pg,\n\tpointsColors: pg.pointsColors || getColors(pg.calculationOutput.orderedPoints.length),\n});\n\nconst removeDuplicatePointsGroups = (pointsGroup: IPointsGroup, index: number, pointsGroups: IPointsGroup[]) =>\n\tpointsGroups.map(pg => pg.pointsGroupId).indexOf(pointsGroup.pointsGroupId) === index;\n\nconst toSavedPointsGroups = (pointsGroup: IPointsGroup) => pointsGroup.pointsGroupId !== undefined;\n\nconst asInactive = (pointsGroup: IPointsGroup): IPointsGroup => ({\n\t...pointsGroup,\n\tisActive: false,\n});\n\nconst replaceUnsavedPointsGroup = (newPointsGroup: IPointsGroup) => (pg: IPointsGroup) =>\n\tpg.pointsGroupId ? pg : newPointsGroup;\n","import axios from \"axios\";\nimport { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\nimport {\n\tcreatePointsGroup,\n\tdataTypeKeys,\n\tdeletePointsGroup,\n\tgetPointsGroups,\n\tpopulatePointsGroupsStateFromLocalStorageIfAvailable,\n\tsavePointsGroupIfStoredLocally,\n\taddPointsGroup\n} from \"./actions\";\nimport { formHeaders, localStorageKeys, pointsGroupApi } from \"./constants\";\nimport { IPointsGroup } from \"./types\";\nimport { getFromLocalStorage } from \"Core\";\n\n// TODO: saga tests\n\nfunction* getPointsGroupsAsync() {\n\ttry {\n\t\tconst { data } = yield call(axios.get, pointsGroupApi.getPointsGroups);\n\t\tyield put(getPointsGroups.success(data));\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nfunction* watchGetPointsGroups() {\n\tyield takeEvery(dataTypeKeys.GET_POINTS_GROUPS, getPointsGroupsAsync);\n}\n\nfunction* createPointsGroupAsync(\n\taction: ReturnType<typeof createPointsGroup.request>\n) {\n\ttry {\n\t\tconst file = action.payload;\n\t\tconst { data } = yield call(\n\t\t\taxios.post,\n\t\t\tpointsGroupApi.createPointsGroup,\n\t\t\tfile,\n\t\t\tformHeaders\n\t\t);\n\n\t\tconst pointsGroup: IPointsGroup = {\n\t\t\t...data,\n\t\t\tpointsGroupId: undefined\n\t\t};\n\n\t\tyield put(createPointsGroup.success(pointsGroup));\n\n\t\tlocalStorage.setItem(\n\t\t\tlocalStorageKeys.pointsGroup,\n\t\t\tJSON.stringify([pointsGroup])\n\t\t);\n\t} catch (error) {\n\t\tyield put(createPointsGroup.failure(error));\n\t}\n}\n\nfunction* watchCreatePointsGroup() {\n\tyield takeLatest(dataTypeKeys.CREATE_POINTS_GROUP, createPointsGroupAsync);\n}\n\nfunction* addPointsGroupAsync(\n\taction: ReturnType<typeof addPointsGroup.request>\n) {\n\ttry {\n\t\tconst file = action.payload;\n\t\tconst { data } = yield call(\n\t\t\taxios.post,\n\t\t\tpointsGroupApi.addPointsGroup,\n\t\t\tfile,\n\t\t\tformHeaders\n\t\t);\n\t\tyield put(addPointsGroup.success(data));\n\t} catch (error) {\n\t\tyield put(addPointsGroup.failure(error));\n\t}\n}\n\nfunction* watchAddPointsGroup() {\n\tyield takeLatest(dataTypeKeys.ADD_POINTS_GROUP, addPointsGroupAsync);\n}\n\nfunction* handlePopulatePointsGroupsFromLocalStorageIfAvailable() {\n\ttry {\n\t\tconst pointsGroup = localStorage.getItem(localStorageKeys.pointsGroup);\n\t\tif (pointsGroup !== null) {\n\t\t\tyield put(\n\t\t\t\tpopulatePointsGroupsStateFromLocalStorageIfAvailable.success(\n\t\t\t\t\tJSON.parse(pointsGroup)[0]\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nfunction* watchPopulatePointsGroupsFromLocalStorageIfAvailable() {\n\tyield takeEvery(\n\t\tdataTypeKeys.POPULATE_POINTS_GROUPS_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE,\n\t\thandlePopulatePointsGroupsFromLocalStorageIfAvailable\n\t);\n}\n\nfunction* savePointsGroupAsync(\n\taction: ReturnType<typeof savePointsGroupIfStoredLocally.request>\n) {\n\ttry {\n\t\tconst pointsGroups = getFromLocalStorage(localStorageKeys.pointsGroup);\n\t\tif (pointsGroups) {\n\t\t\tconst { data } = yield call(\n\t\t\t\taxios.post,\n\t\t\t\tpointsGroupApi.savePointsGroup,\n\t\t\t\tpointsGroups[0]\n\t\t\t);\n\t\t\tif (data) {\n\t\t\t\tlocalStorage.removeItem(localStorageKeys.pointsGroup);\n\t\t\t}\n\t\t\tyield put(savePointsGroupIfStoredLocally.success(data));\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nfunction* watchSavePointsGroup() {\n\tyield takeLatest(\n\t\tdataTypeKeys.SAVE_POINTS_GROUP_IF_STORED_LOCALLY,\n\t\tsavePointsGroupAsync\n\t);\n}\n\nfunction* deletePointsGroupAsync(\n\taction: ReturnType<typeof deletePointsGroup.request>\n) {\n\ttry {\n\t\tconst { data } = yield call(\n\t\t\taxios.delete,\n\t\t\tpointsGroupApi.deletePointsGroup(action.payload)\n\t\t);\n\t\tyield put(deletePointsGroup.success(data));\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nfunction* watchDeletePointsGroup() {\n\tyield takeLatest(dataTypeKeys.DELETE_POINTS_GROUP, deletePointsGroupAsync);\n}\n\nexport const dataSagas = [\n\twatchGetPointsGroups,\n\twatchAddPointsGroup,\n\twatchCreatePointsGroup,\n\twatchSavePointsGroup,\n\twatchDeletePointsGroup,\n\twatchPopulatePointsGroupsFromLocalStorageIfAvailable\n];\n","import * as React from \"react\";\nimport { Typography, ThemeContext } from \"@nickjmorrow/react-component-library\";\n\nexport const Header: React.FC = ({ children }) => {\n\tconst { spacing } = React.useContext(ThemeContext);\n\treturn (\n\t\t<Typography\n\t\t\tsizeVariant={5}\n\t\t\tweightVariant={3}\n\t\t\tstyle={{ marginBottom: spacing.ss4 }}>\n\t\t\t{children}\n\t\t</Typography>\n\t);\n};\n","import {\n\tStyleConstant,\n\tThemeContext\n} from \"@nickjmorrow/react-component-library\";\nimport styled from \"styled-components\";\nimport * as React from \"react\";\nconst StyledCode = styled(\"span\")<{\n\tcolors: StyleConstant<\"colors\">;\n\tborderRadius: StyleConstant<\"border\">[\"borderRadius\"];\n}>`\n\tfont-family: \"Courier New\", Courier, monospace;\n\tbackground-color: ${p => p.colors.core.cs2};\n\tcolor: ${p => p.colors.core.cs6};\n\tpadding: 4px;\n\tborder-radius: ${p => p.borderRadius.br1};\n\tfont-weight: 600;\n\twhite-space: nowrap;\n`;\n\nexport const Code: React.FC = ({ children }) => {\n\tconst {\n\t\tcolors,\n\t\tborder: { borderRadius }\n\t} = React.useContext(ThemeContext);\n\treturn (\n\t\t<StyledCode borderRadius={borderRadius} colors={colors}>\n\t\t\t{children}\n\t\t</StyledCode>\n\t);\n};\n","import {\n\tPaper as GenericPaper,\n\tThemeContext\n} from \"@nickjmorrow/react-component-library\";\nimport * as React from \"react\";\n\nexport const Paper: React.FC<{ style?: React.CSSProperties }> = ({\n\tchildren,\n\tstyle\n}) => {\n\tconst { spacing } = React.useContext(ThemeContext);\n\tconst defaultStyle = { padding: spacing.ss6, height: \"min-content\" };\n\tconst paperStyle = { ...defaultStyle, ...style };\n\treturn <GenericPaper style={paperStyle}>{children}</GenericPaper>;\n};\n","import { Typography, ThemeContext, StyleConstant } from '@nickjmorrow/react-component-library';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { ClusterPoint, IPointsGroup } from '../types';\nimport { TitleWrapper } from '../../Core/components';\nimport { Header } from './Header';\nimport { Code } from './Code';\nimport { Paper } from './Paper';\n\nexport const Clusters: React.SFC<IOwnProps> = ({ activePointsGroup }) => {\n\tconst { spacing } = React.useContext(ThemeContext);\n\n\tif (!activePointsGroup) {\n\t\treturn null;\n\t}\n\n\tconst { clusterCount } = activePointsGroup;\n\tconst clusteredPoints = getClusters(clusterCount, activePointsGroup);\n\tconst clusterIds = [...new Set(clusteredPoints.map(cp => cp.clusterId))];\n\tconst asRenderedPoints = (p: ClusterPoint) => (\n\t\t<div key={`point-id-${p.pointId}`}>\n\t\t\t<Typography key={p.pointId}>{p.name}</Typography>\n\t\t</div>\n\t);\n\tconst renderedClusteredPoints = clusterIds\n\t\t.sort((a: number, b: number) => a - b)\n\t\t.map((c: number) => {\n\t\t\tconst points = clusteredPoints.filter(p => p.clusterId === c);\n\t\t\tconst renderedPoints = points.map(asRenderedPoints);\n\t\t\tconst intraclusterDistances = activePointsGroup.calculationOutput.clusteringSummaries[\n\t\t\t\tclusterCount - 1\n\t\t\t].intraclusterDistances.find(icd => icd.clusterId === c);\n\t\t\tconst distance = intraclusterDistances && intraclusterDistances.distance;\n\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tkey={`cluster-id-${c}`}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\talignItems: 'flex-start',\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Cluster spacing={spacing} color={activePointsGroup.pointsColors[c]}>\n\t\t\t\t\t\t{renderedPoints}\n\t\t\t\t\t</Cluster>\n\t\t\t\t\t{distance === '0m' ? '' : <Code>{distance}</Code>}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\treturn (\n\t\t<div style={{ display: 'flex', justifyContent: 'center' }}>\n\t\t\t<Paper\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: 'min-content',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<TitleWrapper>\n\t\t\t\t\t<Header>Clusters</Header>\n\t\t\t\t</TitleWrapper>\n\t\t\t\t<ClustersWrapper>{renderedClusteredPoints}</ClustersWrapper>\n\t\t\t</Paper>\n\t\t</div>\n\t);\n};\n\n// types\ninterface IOwnProps {\n\treadonly activePointsGroup: IPointsGroup;\n}\n\n// css\nconst Cluster = styled('div')<{\n\tcolor: string;\n\tspacing: StyleConstant<'spacing'>;\n}>`\n\tborder-left: ${p => p.spacing.ss2} solid ${props => props.color};\n\tmargin-bottom: ${p => p.spacing.ss2};\n\tpadding-left: ${p => p.spacing.ss2};\n`;\n\nconst ClustersWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex-wrap: wrap;\n\tgrid-area: clusters;\n\talign-items: center;\n\twidth: 350px;\n\t@media (min-width: 900px) {\n\t\talign-items: flex-start;\n\t}\n`;\n\n// helpers\nconst getClusters = (clusterCount: number, activePointsGroup: IPointsGroup): ClusterPoint[] => {\n\tconst {\n\t\tcalculationOutput: { orderedPoints: clusteredPoints },\n\t} = activePointsGroup;\n\treturn clusteredPoints.map(ahc => ({\n\t\t...ahc,\n\t\tclusterId: ahc.clusterSnapshots[clusteredPoints.length - clusterCount].clusterId,\n\t}));\n};\n","export const getCircle = () => {\n\tlet circle = '';\n\t// @ts-ignore\n\tif (google == undefined) {\n\t\tcircle = '';\n\t} else {\n\t\t// @ts-ignore\n\t\tcircle = google.maps.SymbolPath.CIRCLE as string;\n\t}\n\tconsole.log(circle);\n\treturn circle;\n};\n","import * as React from 'react';\nimport { GoogleMap, withGoogleMap, withScriptjs, Marker, MarkerProps, Polyline } from 'react-google-maps';\nimport { compose, withProps } from 'recompose';\nimport { googleMapURL } from '../constants';\nimport { scale } from '../../Core';\nimport { IPointsGroup } from 'Data';\nimport { getCircle } from 'Data/googleProvider';\n\ninterface Props {\n\tcenter?: {\n\t\tlat: number;\n\t\tlng: number;\n\t};\n\tchildren?: React.ReactNode;\n\tactivePointsGroup: IPointsGroup;\n}\n\ninterface OtherProps {\n\tactivePointsGroup: IPointsGroup;\n}\n\nexport const Map: React.SFC<OtherProps> = ({ activePointsGroup }) => (\n\t<MapInternal activePointsGroup={activePointsGroup} />\n);\n\nexport const MapInternal: React.ComponentClass<Props & OtherProps> = compose<Props, Props & OtherProps>(\n\twithProps({\n\t\tgoogleMapURL,\n\t\tloadingElement: <div style={{ height: '100%', backgroundColor: 'red' }} />,\n\t\tcontainerElement: <div style={{ height: '580px', width: '100%', display: 'block' }} />,\n\t\tmapElement: <div style={{ height: '100%' }} />,\n\t}),\n\twithScriptjs,\n\twithGoogleMap,\n)((props: Props & OtherProps) => {\n\tconst { activePointsGroup } = props;\n\n\tconst defaultPosition = activePointsGroup && {\n\t\tlat: activePointsGroup.averageVerticalDisplacement,\n\t\tlng: activePointsGroup.averageHorizontalDisplacement,\n\t};\n\n\tconst markers = getMarkers(activePointsGroup);\n\tconst polylines = getPolylines(activePointsGroup);\n\n\treturn (\n\t\t<GoogleMap defaultZoom={13} defaultCenter={defaultPosition} center={defaultPosition}>\n\t\t\t{markers && renderMarkers(markers)}\n\t\t\t{renderPolylines(polylines)}\n\t\t</GoogleMap>\n\t);\n});\n\ntype PolylineInfo = Array<{\n\tlat: number;\n\tlng: number;\n\torderId: number;\n}>;\n\nconst renderPolylines = (polylineProps: PolylineInfo[]): React.ReactNode => {\n\treturn polylineProps.map((plp, i) => {\n\t\treturn (\n\t\t\t<Polyline\n\t\t\t\tkey={i}\n\t\t\t\tpath={plp}\n\t\t\t\toptions={{\n\t\t\t\t\tgeodesic: true,\n\t\t\t\t\tstrokeColor: '#FF0000',\n\t\t\t\t\tstrokeOpacity: 1.0,\n\t\t\t\t\tstrokeWeight: 2,\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t});\n};\n\nconst getPolylines = (pointsGroup: IPointsGroup): PolylineInfo[] => {\n\tconst { clusterCount } = pointsGroup;\n\n\t// TODO: this type seems wrong\n\treturn pointsGroup.calculationOutput.orderedPoints\n\t\t.reduce<PolylineInfo[]>((agg, cur, index, arr) => {\n\t\t\tconst { clusterId, orderId } = cur.clusterSnapshots.find(cs => cs.clusterCount === clusterCount)!;\n\t\t\tconst latLng = {\n\t\t\t\tlat: cur.verticalDisplacement,\n\t\t\t\tlng: cur.horizontalDisplacement,\n\t\t\t\torderId,\n\t\t\t};\n\t\t\tif (agg[clusterId]) {\n\t\t\t\tagg[clusterId].push(latLng);\n\t\t\t} else {\n\t\t\t\tagg[clusterId] = [latLng];\n\t\t\t}\n\t\t\treturn agg;\n\t\t}, [])\n\t\t.filter(p => p.length > 1)\n\t\t.map(p => p.sort(x => x.orderId));\n};\n\nconst renderMarkers = (markers: MarkerProps[]) =>\n\tmarkers.map((marker, index) => (\n\t\t<Marker\n\t\t\tkey={index}\n\t\t\ticon={{\n\t\t\t\t// @ts-ignore\n\t\t\t\tfillColor: marker.icon!.fillColor,\n\t\t\t\tscale,\n\t\t\t\tpath: getCircle(),\n\t\t\t\tfillOpacity: 0.9,\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t}}\n\t\t\tposition={{\n\t\t\t\tlat: marker.position!.lat as number,\n\t\t\t\tlng: marker.position!.lng as number,\n\t\t\t}}\n\t\t\tlabel={{ text: marker.label!.text, fontSize: '0' }}\n\t\t/>\n\t));\n\nconst getMarkers = (activePointsGroup: IPointsGroup) => {\n\tconst {\n\t\tclusterCount,\n\t\tpointsColors,\n\t\tcalculationOutput: { orderedPoints: points },\n\t} = activePointsGroup;\n\n\treturn activePointsGroup.calculationOutput.orderedPoints.map(mp => {\n\t\treturn {\n\t\t\tposition: {\n\t\t\t\tlat: mp.verticalDisplacement,\n\t\t\t\tlng: mp.horizontalDisplacement,\n\t\t\t},\n\t\t\tlabel: {\n\t\t\t\ttext: mp.name,\n\t\t\t},\n\t\t\ticon: {\n\t\t\t\tfillColor: pointsColors[mp.clusterSnapshots[points.length - clusterCount].clusterId],\n\t\t\t},\n\t\t};\n\t});\n};\n","import { IDataState } from \"./reducer\";\nimport { createSelector } from \"reselect\";\n\ninterface IExpectedReduxState {\n\tdata: IDataState;\n}\n\n// TODO: reselect\nexport const dataSelector = (state: IExpectedReduxState) => state.data;\n\nexport const pointsGroupsSelector = createSelector(\n\t[dataSelector],\n\tdata => data.pointsGroups\n);\n\nexport const getActivePointsGroup = createSelector(\n\t[pointsGroupsSelector],\n\tpointsGroups => pointsGroups.find(pg => pg.isActive)!\n);\n","import {\n\tSlider,\n\tStyleConstant,\n\tThemeContext,\n\tTypography\n} from \"@nickjmorrow/react-component-library\";\nimport \"rc-slider/assets/index.css\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport { TitleWrapper } from \"../../../Core/components\";\nimport { IPoint } from \"../../types\";\n\nexport const AhcParameters: React.SFC<IProps> = ({\n\tmin,\n\tmax,\n\tclusterCount,\n\tonClusterCountChange: handleClusterCountChange\n}) => {\n\tconst handleClusterCountChangeInternal = (newIterations: number) =>\n\t\thandleClusterCountChange(newIterations);\n\tconst { spacing } = React.useContext(ThemeContext);\n\treturn (\n\t\t<Wrapper spacing={spacing}>\n\t\t\t<TitleWrapper>\n\t\t\t\t<Typography sizeVariant={5}>Number of Clusters</Typography>\n\t\t\t</TitleWrapper>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\tdisplay: \"flex\"\n\t\t\t\t}}>\n\t\t\t\t<Slider\n\t\t\t\t\tmin={min}\n\t\t\t\t\tmax={max}\n\t\t\t\t\tvalue={clusterCount}\n\t\t\t\t\tonChange={handleClusterCountChangeInternal}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Wrapper>\n\t);\n};\n\n// types\ninterface IProps {\n\treadonly min: number;\n\treadonly max: number;\n\treadonly clusterCount: number;\n\treadonly points: IPoint[];\n\treadonly onClusterCountChange: (value: number) => void;\n}\n\n// css\nconst Wrapper = styled(\"div\")<{ spacing: StyleConstant<\"spacing\"> }>`\n\tmargin-top: ${p => p.spacing.ss4};\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-start;\n\twidth: 100%;\n`;\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { IReduxState } from \"../../../reducer\";\nimport { setClusterCount } from \"../../actions\";\nimport { getActivePointsGroup } from \"../../selectors\";\nimport { IPointsGroup } from \"../../types\";\nimport { AhcParameters } from \"./AhcParameters\";\n\n// TODO: use hooks to make functional component\nclass ParametersInternal extends React.PureComponent<IProps, IState> {\n\treadonly state = initialState;\n\n\thandleClusterCountChangeInternal = (clusterCount: number) => {\n\t\tconst { activePointsGroup, onSetClusterCount } = this.props;\n\t\tonSetClusterCount({\n\t\t\tpointsGroupId: activePointsGroup.pointsGroupId,\n\t\t\tclusterCount\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { activePointsGroup } = this.props;\n\t\tif (!activePointsGroup) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst { clusterCount } = activePointsGroup;\n\n\t\tconst points = activePointsGroup.calculationOutput.orderedPoints;\n\t\tconst minClusters = 1;\n\t\tconst maxClusters = points.length;\n\n\t\treturn (\n\t\t\t<AhcParameters\n\t\t\t\tmin={minClusters}\n\t\t\t\tmax={maxClusters}\n\t\t\t\tclusterCount={clusterCount}\n\t\t\t\tpoints={points}\n\t\t\t\tonClusterCountChange={this.handleClusterCountChangeInternal}\n\t\t\t/>\n\t\t);\n\t}\n}\n\n// types\ninterface IDispatchProps {\n\treadonly onSetClusterCount: typeof setClusterCount;\n}\n\ninterface IReduxProps {\n\treadonly activePointsGroup: IPointsGroup;\n}\n\ntype IProps = IDispatchProps & IReduxProps;\n\ntype IState = typeof initialState;\n\n// redux\nconst mapStateToProps = (state: IReduxState): IReduxProps => ({\n\tactivePointsGroup: getActivePointsGroup(state)\n});\nconst mapDispatchToProps = (dispatch: Dispatch): IDispatchProps =>\n\tbindActionCreators(\n\t\t{\n\t\t\tonSetClusterCount: setClusterCount\n\t\t},\n\t\tdispatch\n\t);\nexport const Parameters = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(ParametersInternal);\n\n// state initialization\nconst minMaximumDistanceBetweenPoints = 1;\nconst minMinimumPointsPerCluster = 1;\n\nconst initialState = {\n\tmaximumDistanceBetweenPoints: minMaximumDistanceBetweenPoints,\n\tminimumPointsPerCluster: minMinimumPointsPerCluster\n};\n","import {\n\tTypography,\n\tStyleConstant,\n\tThemeContext,\n\tTrashIcon\n} from \"@nickjmorrow/react-component-library\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport styled from \"styled-components\";\nimport { ItemPermissionType } from \"../../Core\";\nimport { Label } from \"../../Core/components/Label\";\nimport { deletePointsGroup, setActivePointsGroup } from \"../actions\";\nimport { IPointsGroup } from \"../types\";\n\nconst PointsGroupInternal: React.SFC<IProps> = ({\n\tpointsGroup,\n\thandleDeletePointsGroup,\n\thandleSetActivePointsGroup\n}) => {\n\tconst [isHovering, setIsHovering] = React.useState(false);\n\tconst [\n\t\tisHoveringOverDeleteButton,\n\t\tsetIsHoveringOverDeleteButton\n\t] = React.useState(false);\n\tconst turnOnIsHovering = () => setIsHovering(true);\n\tconst turnOffIsHovering = () => setIsHovering(false);\n\n\tconst handleDeletePointsGroupInternal = () => {\n\t\thandleDeletePointsGroup(pointsGroup.pointsGroupId!);\n\t};\n\tconst handleClick = () => {\n\t\tif (!isHoveringOverDeleteButton) {\n\t\t\thandleSetActivePointsGroup(pointsGroup.pointsGroupId!);\n\t\t} else {\n\t\t\thandleDeletePointsGroupInternal();\n\t\t}\n\t};\n\n\tconst {\n\t\tcolors,\n\t\ttransitions,\n\t\tborder: { borderRadius },\n\t\tspacing\n\t} = React.useContext(ThemeContext);\n\tconst { isActive } = pointsGroup;\n\n\treturn (\n\t\t<PointsGroupWrapper\n\t\t\tspacing={spacing}\n\t\t\tcolors={colors}\n\t\t\ttransitions={transitions}\n\t\t\tborderRadius={borderRadius}\n\t\t\tkey={pointsGroup.pointsGroupId}\n\t\t\tonMouseEnter={turnOnIsHovering}\n\t\t\tonMouseLeave={turnOffIsHovering}\n\t\t\tisActive={isActive}\n\t\t\tonClick={handleClick}>\n\t\t\t<Typography\n\t\t\t\tcolorVariant={isActive ? \"primaryLight\" : \"primaryDark\"}>\n\t\t\t\t{pointsGroup.name}\n\t\t\t</Typography>\n\t\t\t{shouldShowDeleteButton(\n\t\t\t\tpointsGroup,\n\t\t\t\tisHovering,\n\t\t\t\tisHoveringOverDeleteButton\n\t\t\t) && (\n\t\t\t\t<TrashIcon\n\t\t\t\t\tonClick={handleDeletePointsGroupInternal}\n\t\t\t\t\tcolorVariant={\"primaryLight\"}\n\t\t\t\t\tsizeVariant={2}\n\t\t\t\t\tonMouseEnter={() => setIsHoveringOverDeleteButton(true)}\n\t\t\t\t\tonMouseLeave={() => setIsHoveringOverDeleteButton(false)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{pointsGroup.itemPermissionType === ItemPermissionType.Public &&\n\t\t\t\t(isActive || isHovering) && (\n\t\t\t\t\t<Label color={\"white\"}>{\"Default\"}</Label>\n\t\t\t\t)}\n\t\t</PointsGroupWrapper>\n\t);\n};\n\nconst shouldShowDeleteButton = (\n\tpg: IPointsGroup,\n\tisHovering: boolean,\n\tisHoveringOverDeleteButton: boolean\n) =>\n\tpg.pointsGroupId &&\n\tpg.itemPermissionType !== ItemPermissionType.Public &&\n\t(isHovering || pg.isActive || isHoveringOverDeleteButton);\n\n// types\nexport interface IOwnProps {\n\tpointsGroup: IPointsGroup;\n}\n\ninterface IDispatchProps {\n\thandleDeletePointsGroup: typeof deletePointsGroup.request;\n\thandleSetActivePointsGroup: typeof setActivePointsGroup;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n\tbindActionCreators(\n\t\t{\n\t\t\thandleDeletePointsGroup: deletePointsGroup.request,\n\t\t\thandleSetActivePointsGroup: setActivePointsGroup\n\t\t},\n\t\tdispatch\n\t);\n\ntype IProps = IOwnProps & IDispatchProps;\n\nexport const PointsGroup = connect(\n\tnull,\n\tmapDispatchToProps\n)(PointsGroupInternal);\n\n// css\nconst PointsGroupWrapper = styled(\"button\")<{\n\tisActive: boolean;\n\tcolors: StyleConstant<\"colors\">;\n\ttransitions: StyleConstant<\"transitions\">;\n\tborderRadius: StyleConstant<\"border\">[\"borderRadius\"];\n\tspacing: StyleConstant<\"spacing\">;\n}>`\n\tpadding: ${p => p.spacing.ss3};\n\tborder-radius: ${p => p.borderRadius.br1};\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tcursor: pointer;\n\tmargin: 0 0 ${p => p.spacing.ss2} 0;\n\tborder: none;\n\toutline: none;\n\twidth: ${p => p.spacing.ss64};\n\theight: ${p => p.spacing.ss12};\n\talign-items: center;\n\tbackground-color: ${p =>\n\t\tp.isActive ? p.colors.core.cs4 : p.colors.background};\n\ttransition: background-color, ${p => p.transitions.fast};\n\t&:hover,\n\t&:focus {\n\t\tbackground-color: ${p =>\n\t\t\tp.isActive ? p.colors.core.cs4 : p.colors.core.cs2};\n\t\ttransition: ${p => p.transitions.fast};\n\t}\n`;\n","import * as React from \"react\";\nimport { IPointsGroup } from \"../types\";\nimport { PointsGroup } from \"./PointsGroup\";\nimport { TitleWrapper } from \"../../Core/components\";\nimport { Header } from \"./Header\";\n\nexport const PointsGroupList: React.SFC<IOwnProps> = ({ pointsGroups }) => {\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tflexDirection: \"column\",\n\t\t\t\talignItems: \"flex-start\"\n\t\t\t}}>\n\t\t\t<TitleWrapper>\n\t\t\t\t<Header>Points Groups</Header>\n\t\t\t</TitleWrapper>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\twidth: \"100%\"\n\t\t\t\t}}>\n\t\t\t\t{pointsGroups.map(pg => (\n\t\t\t\t\t<PointsGroup key={pg.pointsGroupId || 0} pointsGroup={pg} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n// types\ninterface IOwnProps {\n\tpointsGroups: IPointsGroup[];\n}\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { IReduxState } from 'reducer';\nimport { Paper } from './Paper';\nimport { Parameters } from './Parameters';\nimport { PointsGroupList } from './PointsGroupList';\nimport { pointsGroupsSelector } from '../selectors';\n\nexport const PointsGroupControls: React.FC = () => {\n\tconst pointsGroups = useSelector((state: IReduxState) => pointsGroupsSelector(state));\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\twidth: '100%',\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t}}\n\t\t>\n\t\t\t<Paper\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\twidth: 'min-content',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<PointsGroupList pointsGroups={pointsGroups} />\n\t\t\t\t<Parameters />\n\t\t\t</Paper>\n\t\t</div>\n\t);\n};\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { Clusters, Summary, IPointsGroup } from 'Data';\nimport { FileUploadForm } from 'Core';\nimport { IOption, ThemeContext, StyleConstant } from '@nickjmorrow/react-component-library';\nimport { PointsGroupControls } from './PointsGroupControls';\nimport { Paper } from './Paper';\n\nexport const MapControls: React.FC<{\n\tpointsGroups: IPointsGroup[];\n\tcurrentClusterOption: IOption;\n\tactivePointsGroup: IPointsGroup;\n}> = ({ activePointsGroup }) => {\n\tconst { spacing } = React.useContext(ThemeContext);\n\treturn (\n\t\t<Wrapper spacing={spacing}>\n\t\t\t<PointsGroupControls />\n\t\t\t<Clusters activePointsGroup={activePointsGroup} />\n\t\t\t<div style={{ display: 'flex', justifyContent: 'center' }}>\n\t\t\t\t<Paper style={{ display: 'flex', justifyContent: 'flex-start' }}>\n\t\t\t\t\t<Summary />\n\t\t\t\t\t<FileUploadForm />\n\t\t\t\t</Paper>\n\t\t\t</div>\n\t\t</Wrapper>\n\t);\n};\n\n// const PointsGroupAndParametersWrapper = styled.div`\n// \twidth: 100%;\n// \tgrid-area: pointsgroupandparameters;\n// \tdisplay: flex;\n// \tjustify-content: center;\n// `;\n\n// const FlexColumn = styled.div`\n// \tdisplay: flex;\n// \tflex-direction: column;\n// \twidth: 300px;\n// `;\n\nconst Wrapper = styled('div')<{ spacing: StyleConstant<'spacing'> }>`\n\tdisplay: grid;\n\tgrid-row-gap: ${p => p.spacing.ss6};\n\tgrid-auto-flow: row;\n\tmargin-top: ${p => p.spacing.ss6};\n\t@media (min-width: 1200px) {\n\t\tgrid-auto-flow: column;\n\t}\n`;\n\n// display: grid;\n// grid-auto-flow: column;\n// margin: ${p => p.spacing.ss8} auto 0px auto;\n// @media (min-width: 900px) {\n// \tgrid-template-areas: \"pointsgroupandparameters clusters\" \"summaryform clusters\";\n// \tgrid-template-columns: repeat(2, 1fr);\n// }\n// @media (min-width: 1200px) {\n// \tgrid-template-areas: \"pointsgroupandparameters clusters summaryform\";\n// \tgrid-auto-flow: column;\n// \tgrid-template-columns: none;\n// }\n","import { StyleConstant, ThemeContext, Typography } from '@nickjmorrow/react-component-library';\nimport * as React from 'react';\nimport { GridLoader } from 'react-spinners';\nimport styled from 'styled-components';\nimport { Map } from '../';\nimport { IReduxState } from '../../reducer';\nimport { getActivePointsGroup } from '../selectors';\nimport { MapControls } from './MapControls';\nimport { useSelector } from 'react-redux';\n\nexport const MapPage: React.SFC = () => {\n\tconst { colors } = React.useContext(ThemeContext);\n\tconst pointsGroups = useSelector((state: IReduxState) => state.data.pointsGroups);\n\tconst activePointsGroup = useSelector((state: IReduxState) => getActivePointsGroup(state));\n\tconst currentClusterOption = useSelector((state: IReduxState) => state.data.currentClusterOption);\n\n\treturn (\n\t\t<>\n\t\t\t{activePointsGroup ? (\n\t\t\t\t<Map activePointsGroup={activePointsGroup} />\n\t\t\t) : (\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\theight: '580px',\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<GridLoader />\n\t\t\t\t\t<Typography style={{ marginTop: '32px' }}>Loading clusters...</Typography>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<Divider colors={colors} />\n\t\t\t<MapControls\n\t\t\t\tpointsGroups={pointsGroups}\n\t\t\t\tactivePointsGroup={activePointsGroup}\n\t\t\t\tcurrentClusterOption={currentClusterOption}\n\t\t\t/>\n\t\t</>\n\t);\n};\n// css\nconst Divider = styled('div')<{ colors: StyleConstant<'colors'> }>`\n\theight: 20px;\n\tbackground-color: ${p => p.colors.neutral.cs6};\n`;\n","import { Typography } from '@nickjmorrow/react-component-library';\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { IReduxState } from 'reducer';\nimport styled from 'styled-components';\nimport { TitleWrapper } from '../../Core/components/TitleWrapper';\nimport { getActivePointsGroup } from '../../Data/selectors';\nimport { Code } from './Code';\nimport { Header } from './Header';\n\n// TODO: relative imports\n\nexport const Summary: React.SFC = () => {\n\tconst activePointsGroup = useSelector((state: IReduxState) => getActivePointsGroup(state));\n\tif (!activePointsGroup) {\n\t\treturn null;\n\t}\n\tconst clusteringSummary =\n\t\tactivePointsGroup.calculationOutput.clusteringSummaries[activePointsGroup.clusterCount - 1];\n\tconst { averageClusterSize, averageIntraclusterDistance, interclusterDistance } = clusteringSummary;\n\treturn (\n\t\t<div>\n\t\t\t<TitleWrapper>\n\t\t\t\t<Header>Summary</Header>\n\t\t\t</TitleWrapper>\n\t\t\t<TextWrapper>\n\t\t\t\t<Wrapper>\n\t\t\t\t\t<Typography colorVariant={'secondaryDark'}>Average distance between clusters:</Typography>\n\t\t\t\t\t<Code>{interclusterDistance}</Code>\n\t\t\t\t</Wrapper>\n\t\t\t\t<Wrapper>\n\t\t\t\t\t<Typography colorVariant={'secondaryDark'}>Average distance within clusters:</Typography>\n\t\t\t\t\t<Code>{averageIntraclusterDistance}</Code>\n\t\t\t\t</Wrapper>\n\t\t\t\t<Wrapper>\n\t\t\t\t\t<Typography colorVariant={'secondaryDark'}>Average points per cluster:</Typography>\n\t\t\t\t\t<Code>{averageClusterSize}</Code>\n\t\t\t\t</Wrapper>\n\t\t\t</TextWrapper>\n\t\t</div>\n\t);\n};\n\nconst Wrapper = styled.div`\n\tmargin: 0 0 12px 0;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-between;\n\talign-items: flex-start;\n\tgrid-area: summary;\n`;\n\n// const FlexCenter = styled.div`\n// \tdisplay: flex;\n// \talign-items: center;\n// \tflex-direction: column;\n// \t@media (min-width: 800px) {\n// \t\talign-items: flex-start;\n// \t}\n// `;\n\nconst TextWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: space-between;\n\tmin-width: 400px;\n`;\n","import { IOption } from '@nickjmorrow/react-component-library';\nimport { apiKey } from '../secrets';\n\n// export enum fileApi {\n// \tget = '/api/data/get',\n// \tupload = '/api/file/convertfiletopoints'\n// }\n\n// export enum calcApi {\n// \tgetAgglomerativeHierarchicalClusters = '/api/calc/getAgglomerativeHierarchicalClusters',\n// \tgetExpectationMaximizationClusters = '/api/calc/getExpectationMaximizationClusters',\n// \tgetDbscan = '/api/calc/getDBSCANClusters',\n// \tgetMeanShiftClusters = '/api/calc/getMeanShiftClusters',\n// \tgetKMeansClusters = '/api/calc/getKMeansClusters'\n// }\n\nconst pointsGroupController = 'pointsGroup';\nexport const pointsGroupApi = {\n\tgetPointsGroups: `/api/${pointsGroupController}/getPointsGroups`,\n\taddPointsGroup: `/api/${pointsGroupController}/addPointsGroup`,\n\tcreatePointsGroup: `/api/${pointsGroupController}/createPointsGroup`,\n\tsavePointsGroup: `/api/${pointsGroupController}/savePointsGroup`,\n\tdeletePointsGroup: (pointsGroupId: number) =>\n\t\t`/api/${pointsGroupController}/deletePointsGroup/${pointsGroupId}`\n};\n\nexport enum clusterTypes {\n\tnone = 'none',\n\tahcs = 'agglomerativeHierarchicalClusters',\n\texpectationMaximization = 'expectationMaximization',\n\tdbscan = 'dbscan',\n\tmeanShift = 'meanShift',\n\tkMeans = 'kMeans'\n}\n\nexport const clusterOptions: IOption[] = [\n\t{\n\t\tvalue: clusterTypes.none,\n\t\tlabel: 'None'\n\t},\n\t{\n\t\tvalue: clusterTypes.ahcs,\n\t\tlabel: 'AHC'\n\t}\n\t// { value: clusterTypes.dbscan, label: 'DBSCAN' },\n\t// {\n\t// \tvalue: clusterTypes.meanShift,\n\t// \tlabel: 'Mean-Shift Clustering'\n\t// },\n\t// {\n\t// \tvalue: clusterTypes.kMeans,\n\t// \tlabel: 'K-Means Clustering'\n\t// },\n\t// {\n\t// \tvalue: clusterTypes.expectationMaximization,\n\t// \tlabel: 'Expectation Maximization'\n\t// }\n];\n\nexport enum localStorageKeys {\n\tpoints = 'points',\n\tpointsGroup = 'POINTS_GROUPS'\n}\n\nexport const formHeaders = {\n\theaders: { 'Content-Type': 'multipart/form-data' }\n};\n\nexport enum mapFormFields {\n\tfile = 'FILE',\n\tmapName = 'MAP_NAME'\n}\n\nexport const googleMapURL = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&v=3.exp&libraries=geometry,drawing,places`;\n","import { LoginInfo, RegisterInfo, User } from \"./types\";\nimport { action } from \"typesafe-actions\";\nimport { typeKeys } from \"./typeKeys\";\nimport { GoogleLoginResponse } from \"react-google-login\";\nimport { Action } from \"redux\";\n\nexport const login = {\n\trequest: (payload: { loginInfo: LoginInfo; additionalActions?: any[] }) =>\n\t\taction(typeKeys.LOGIN, payload),\n\tsuccess: (user: User) => action(typeKeys.LOGIN_SUCCEEDED, user),\n\tfailure: (error: string) => action(typeKeys.LOGIN_FAILED, error)\n};\n\nexport const register = {\n\trequest: (registerInfo: RegisterInfo) =>\n\t\taction(typeKeys.REGISTER, registerInfo),\n\tsuccess: (user: User) => action(typeKeys.REGISTER_SUCCEEDED, user),\n\tfailure: (error: string) => action(typeKeys.REGISTER_FAILED, error)\n};\n\nexport const logout = {\n\trequest: (additionalActions?: Array<() => Action>) =>\n\t\taction(typeKeys.LOGOUT, additionalActions),\n\tsuccess: () => action(typeKeys.LOGOUT_SUCCEEDED),\n\tfailure: (error: string) => action(typeKeys.LOGOUT_FAILED, error)\n};\n\nexport const authenticateWithGoogle = {\n\trequest: (payload: {\n\t\tgoogleLoginResponse: GoogleLoginResponse;\n\t\tadditionalActions: Array<() => Action<any>>;\n\t}) => action(typeKeys.AUTHENTICATE_WITH_GOOGLE, payload),\n\tsuccess: (data: any) =>\n\t\taction(typeKeys.AUTHENTICATE_WITH_GOOGLE_SUCCEEDED, data),\n\tfailure: (error: string) =>\n\t\taction(typeKeys.AUTHENTICATE_WITH_GOOGLE_FAILED, error)\n};\n\nexport const populateUserStateFromLocalStorageIfAvailable = {\n\trequest: () =>\n\t\taction(typeKeys.POPULATE_USER_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE),\n\tsuccess: (user: User) =>\n\t\taction(\n\t\t\ttypeKeys.POPULATE_USER_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE_SUCCEEDED,\n\t\t\tuser\n\t\t),\n\tfailure: (error: string) =>\n\t\taction(\n\t\t\ttypeKeys.POPULATE_USER_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE_FAILED,\n\t\t\terror\n\t\t)\n};\n","export * from './actions';\nexport * from './reducer';\nexport * from './sagas';\nexport * from './components';\nexport * from './types';\n","import axios from 'axios';\nimport * as React from 'react';\nimport { getBaseUrl } from 'services';\nimport { Landing } from 'Core';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ThemeContext, getThemeFromNewInputs } from '@nickjmorrow/react-component-library';\naxios.defaults.baseURL = getBaseUrl();\n\nconst inputs = {\n\ttypography: {\n\t\tfontFamily: {\n\t\t\ttitle: 'PT Sans, sans-serif',\n\t\t},\n\t},\n};\n\nconsole.log('loading app');\n\nexport const App: React.SFC = () => (\n\t<Router>\n\t\t<ThemeContext.Provider value={getThemeFromNewInputs(inputs)}>\n\t\t\t<Landing />\n\t\t</ThemeContext.Provider>\n\t</Router>\n);\n","import { developmentUrl } from './constants';\nimport { productionUrl } from './secrets';\n\nexport const getBaseUrl = () => {\n\tconst env = process.env.NODE_ENV;\n\treturn env === 'development' ? developmentUrl : productionUrl;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA',\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import { all, fork } from 'redux-saga/effects';\nimport { authSagas } from './Auth/auth-helpers/sagas';\nimport { dataSagas } from './Data';\nimport { coreSagas } from './Core';\n\n// TODO\n// import { authSagas } from '@nickjmorrow/react-component-library';\n\nconst allSagas = [...authSagas, ...dataSagas, ...coreSagas];\n\nexport function* rootSaga() {\n\tyield all(allSagas.map(s => fork(s)));\n}\n","import { combineReducers } from 'redux';\nimport { routerReducer, RouterState } from 'react-router-redux';\nimport { dataReducer, IDataState } from './Data';\nimport { authReducer, AuthState } from 'Auth/auth-helpers';\nimport { coreReducer, ICoreState } from './Core';\n\nexport const rootReducer = combineReducers({\n\trouting: routerReducer,\n\tdata: dataReducer,\n\tauth: authReducer,\n\tcore: coreReducer,\n});\n\nexport interface IReduxState {\n\treadonly routing: RouterState;\n\treadonly data: IDataState;\n\treadonly auth: AuthState;\n\treadonly core: ICoreState;\n}\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootSaga } from './sagas';\nimport { routerMiddleware } from 'react-router-redux';\nimport { rootReducer, IReduxState } from './reducer';\nimport { createBrowserHistory } from 'history';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configureStore = (history: any, initialState: IReduxState) => {\n\tconst middleware = [sagaMiddleware, routerMiddleware(history)];\n\n\t// In development, use the browser's Redux dev tools extension if installed\n\tconst enhancers: any[] = [];\n\tconst isDevelopment = process.env.NODE_ENV === 'development';\n\tif (isDevelopment && typeof window !== 'undefined' && (window as any).__REDUX_DEVTOOLS_EXTENSION__) {\n\t\tenhancers.push((window as any).__REDUX_DEVTOOLS_EXTENSION__());\n\t}\n\n\tconst intermediateStore = createStore(\n\t\trootReducer,\n\t\tinitialState as any,\n\t\tcompose(applyMiddleware(...middleware), ...enhancers),\n\t);\n\n\tsagaMiddleware.run(rootSaga);\n\n\treturn intermediateStore;\n};\n\nexport const store = configureStore(createBrowserHistory(), (window as any).initialReduxState);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport axios from 'axios';\nimport { Router } from 'react-router';\nimport { createBrowserHistory } from 'history';\nimport { store } from './store';\n\nconsole.log('rendering');\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { apiKey } from \"../secrets\";\n\nexport const googleMapURL = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&v=3.exp&libraries=geometry,drawing,places`;\n\nexport const manhattanPosition = { lat: 40.7831, lng: -73.9712 };\nexport const scale = 6;\n\nconst databaseSettingController = \"databaseSetting\";\nexport const coreApi = {\n\tgetDatabaseSettings: `/api/${databaseSettingController}/getDatabaseSettings`\n};\n\nexport const settingIds = {\n\tappName: \"appName\"\n};\n\nexport const coreSessionStorageKeys = {\n\tdatabaseSettings: \"databaseSettings\"\n};\n","import { PopulatedAppBar } from '@nickjmorrow/react-component-library';\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { IReduxState } from '../../reducer';\nimport { settingIds } from '../constants';\nimport { getDatabaseSettingValue } from '../selectors';\n\nexport const AppBar: React.FC = () => {\n\tconst appName = useSelector((state: IReduxState) => getDatabaseSettingValue(state, settingIds.appName));\n\treturn <PopulatedAppBar appName={appName} styleVariant={1} />;\n};\n","import {\n\tFileInput,\n\tIInitialInputInfo,\n\tTypography\n} from \"@nickjmorrow/react-component-library\";\nimport { getIsAuthenticated } from \"Auth/auth-helpers\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { addPointsGroup, createPointsGroup } from \"../../Data/actions\";\nimport { IReduxState } from \"../../reducer\";\nimport { TitleWrapper } from \"./TitleWrapper\";\n\nexport class FileUploadFormInternal extends React.PureComponent<\n\tIProps,\n\ttypeof initialState\n> {\n\treadonly state = initialState;\n\n\thandleFileChange = (fileList: FileList | null) => {\n\t\tif (fileList && fileList.length) {\n\t\t\tconst file = new FormData();\n\t\t\tfile.append(\"file\", fileList[0]);\n\t\t\tconst {\n\t\t\t\tisAuthenticated,\n\t\t\t\tonCreatePointsGroup,\n\t\t\t\tonAddPointsGroup\n\t\t\t} = this.props;\n\t\t\tif (isAuthenticated) {\n\t\t\t\tonAddPointsGroup(file);\n\t\t\t} else {\n\t\t\t\tonCreatePointsGroup(file);\n\t\t\t}\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<TitleWrapper>\n\t\t\t\t\t<Typography sizeVariant={4}>\n\t\t\t\t\t\t{\"Upload Points Group\"}\n\t\t\t\t\t</Typography>\n\t\t\t\t</TitleWrapper>\n\t\t\t\t<FileInput labelOnUpload={'Upload'} onChange={this.handleFileChange} useMargin={false} />\n\t\t\t</>\n\t\t);\n\t}\n}\n\n// css\n\n// types\nconst initialState = {\n\tinputInfo: {\n\t\tname: \"file\",\n\t\ttype: \"file\"\n\t} as IInitialInputInfo\n};\n\ninterface IReduxProps {\n\tisAuthenticated: boolean;\n}\n\ninterface IDispatchProps {\n\tonCreatePointsGroup: typeof createPointsGroup.request;\n\tonAddPointsGroup: typeof addPointsGroup.request;\n}\n\ntype IProps = IReduxProps & IDispatchProps;\n\n// redux\nconst mapStateToProps = (state: IReduxState) => ({\n\tisAuthenticated: getIsAuthenticated(state)\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n\tbindActionCreators(\n\t\t{\n\t\t\tonCreatePointsGroup: createPointsGroup.request,\n\t\t\tonAddPointsGroup: addPointsGroup.request\n\t\t},\n\t\tdispatch\n\t);\n\nexport const FileUploadForm = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(FileUploadFormInternal);\n","import { PopulatedFooter as GenericFooter } from '@nickjmorrow/react-component-library';\nimport * as React from 'react';\n\nexport const Footer: React.SFC = () => (\n\t<div style={{ marginTop: '90px' }}>\n\t\t<GenericFooter />\n\t</div>\n);\n","import { getPointsGroups, MapPage } from 'Data';\r\nimport * as React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { getDatabaseSettings } from 'Core/actions';\r\nimport { AppBar } from 'Core/components/AppBar';\r\nimport { Footer } from 'Core/components/Footer';\r\n\r\nexport const Landing: React.SFC = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst handleGetPointsGroups = () => dispatch(getPointsGroups.request());\r\n\tconst handleGetDatabaseSettings = () => dispatch(getDatabaseSettings.request());\r\n\r\n\tReact.useEffect(() => {\r\n\t\thandleGetDatabaseSettings();\r\n\t\thandleGetPointsGroups();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<AppBar />\r\n\t\t\t<MapPage />\r\n\t\t\t<Footer />\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\n// css\r\nconst Wrapper = styled.div`\r\n\tdisplay: block;\r\n\tmin-height: 100vh;\r\n\tposition: relative;\r\n\toverflow: hidden;\r\n`;\r\n","import { action } from \"typesafe-actions\";\nimport { DatabaseSetting } from \"./types\";\n\nexport enum coreTypeKeys {\n\tGET_DATABASE_SETTINGS = \"GET_DATABASE_SETTINGS\",\n\tGET_DATABASE_SETTINGS_SUCCEEDED = \"GET_DATABASE_SETTINGS_SUCCEEDED\",\n\tGET_DATABASE_SETTINGS_FAILED = \"GET_DATABASE_SETTINGS_FAILED\"\n}\n\nexport const getDatabaseSettings = {\n\trequest: () => action(coreTypeKeys.GET_DATABASE_SETTINGS),\n\tsuccess: (payload: DatabaseSetting[]) =>\n\t\taction(coreTypeKeys.GET_DATABASE_SETTINGS_SUCCEEDED, payload),\n\tfailure: (payload: string) =>\n\t\taction(coreTypeKeys.GET_DATABASE_SETTINGS_FAILED, payload)\n};\n","import styled from \"styled-components\";\nexport const TitleWrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\twidth: auto;\n\tmargin-bottom: 16px;\n`;\n","// export const apiKey = 'AIzaSyDbyQaUktZ5kk1rNPxDIErP3H7g4qLHjeQ';\nexport const apiKey = 'AIzaSyB0Ejm-Rjyv4VpQflllCjRzk_PSaMRJeXM';\nexport const clientId = '738847881304-fhdchijkv8j69al38t7vbti212f44530.apps.googleusercontent.com';\nexport const productionUrl = 'https://shrouded-sands-94777.herokuapp.com/';\n","import Axios from \"axios\";\n\nexport const addTokenToDefaultHeader = (token: string) => {\n\tAxios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n","import { action } from \"typesafe-actions\";\nimport { IPointsGroup } from \"./types\";\n\nexport enum dataTypeKeys {\n\tCREATE_POINTS_GROUP = \"CREATE_POINTS_GROUP\",\n\tCREATE_POINTS_GROUP_SUCCEEDED = \"CREATE_POINTS_GROUP_SUCCEEDED\",\n\tCREATE_POINTS_GROUP_FAILED = \"CREATE_POINTS_GROUP_FAILED\",\n\tADD_POINTS_GROUP = \"ADD_POINTS_GROUP\",\n\tADD_POINTS_GROUP_SUCCEEDED = \"ADD_POINTS_GROUP_SUCCEEDED\",\n\tADD_POINTS_GROUP_FAILED = \"ADD_POINTS_GROUP_FAILED\",\n\tPOPULATE_POINTS_GROUPS_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE = \"POPULATE_POINTS_GROUPS_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE\",\n\tPOPULATE_POINTS_GROUPS_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE_SUCCEEDED = \"POPULATE_POINTS_GROUPS_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE_SUCCEEDED\",\n\tGET_POINTS_GROUPS = \"GET_POINTS_GROUPS\",\n\tGET_POINTS_GROUPS_SUCCEEDED = \"GET_POINTS_GROUPS_SUCCEEDED\",\n\tGET_POINTS_GROUPS_FAILED = \"GET_POINTS_GROUPS_FAILED\",\n\tSAVE_POINTS_GROUP_IF_STORED_LOCALLY = \"SAVE_POINTS_GROUP_IF_STORED_LOCALLY\",\n\tSAVE_POINTS_GROUP_IF_STORED_LOCALLY_SUCCEEDED = \"SAVE_POINTS_GROUP_IF_STORED_LOCALLY_SUCCEEDED\",\n\tSAVE_POINTS_GROUP_IF_STORED_LOCALLY_FAILED = \"SAVE_POINTS_GROUP_IF_STORED_LOCALLY_FAILED\",\n\tDELETE_POINTS_GROUP = \"DELETE_POINTS_GROUP\",\n\tDELETE_POINTS_GROUP_SUCCEEDED = \"DELETE_POINTS_GROUP_SUCCEEDED\",\n\tDELETE_POINTS_GROUP_FAILED = \"DELETE_POINTS_GROUP_FAILED\",\n\tSET_ACTIVE_POINTS_GROUP = \"SET_ACTIVE_POINTS_GROUP\",\n\tREMOVE_SAVED_AND_PRIVATE_POINTS_GROUPS = \"REMOVE_UNSAVED_POINTS_GROUPS\",\n\tSET_CLUSTER_COUNT = \"SET_CLUSTER_COUNT\"\n}\n\nexport const addPointsGroup = {\n\trequest: (payload: FormData) =>\n\t\taction(dataTypeKeys.ADD_POINTS_GROUP, payload),\n\tsuccess: (payload: IPointsGroup) =>\n\t\taction(dataTypeKeys.ADD_POINTS_GROUP_SUCCEEDED, payload),\n\tfailure: (payload: string) =>\n\t\taction(dataTypeKeys.ADD_POINTS_GROUP_FAILED, payload)\n};\n\nexport const createPointsGroup = {\n\trequest: (payload: FormData) =>\n\t\taction(dataTypeKeys.CREATE_POINTS_GROUP, payload),\n\tsuccess: (payload: IPointsGroup) =>\n\t\taction(dataTypeKeys.CREATE_POINTS_GROUP_SUCCEEDED, payload),\n\tfailure: (payload: string) =>\n\t\taction(dataTypeKeys.CREATE_POINTS_GROUP_FAILED, payload)\n};\n\nexport const savePointsGroupIfStoredLocally = {\n\trequest: () => action(dataTypeKeys.SAVE_POINTS_GROUP_IF_STORED_LOCALLY),\n\tsuccess: (pointsGroup: IPointsGroup) =>\n\t\taction(\n\t\t\tdataTypeKeys.SAVE_POINTS_GROUP_IF_STORED_LOCALLY_SUCCEEDED,\n\t\t\tpointsGroup\n\t\t),\n\tfailure: (payload: string) =>\n\t\taction(dataTypeKeys.SAVE_POINTS_GROUP_IF_STORED_LOCALLY_FAILED, payload)\n};\n\nexport const getPointsGroups = {\n\trequest: () => action(dataTypeKeys.GET_POINTS_GROUPS),\n\tsuccess: (payload: IPointsGroup[]) =>\n\t\taction(dataTypeKeys.GET_POINTS_GROUPS_SUCCEEDED, payload),\n\tfailure: (payload: string) =>\n\t\taction(dataTypeKeys.GET_POINTS_GROUPS_FAILED, payload)\n};\n\nexport const deletePointsGroup = {\n\trequest: (payload: number) =>\n\t\taction(dataTypeKeys.DELETE_POINTS_GROUP, payload),\n\tsuccess: (payload: number) =>\n\t\taction(dataTypeKeys.DELETE_POINTS_GROUP_SUCCEEDED, payload)\n};\n\nexport const populatePointsGroupsStateFromLocalStorageIfAvailable = {\n\trequest: () =>\n\t\taction(\n\t\t\tdataTypeKeys.POPULATE_POINTS_GROUPS_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE\n\t\t),\n\tsuccess: (pointsGroups: IPointsGroup) =>\n\t\taction(\n\t\t\tdataTypeKeys.POPULATE_POINTS_GROUPS_STATE_FROM_LOCAL_STORAGE_IF_AVAILABLE_SUCCEEDED,\n\t\t\tpointsGroups\n\t\t)\n};\n\nexport const setActivePointsGroup = (payload: number) =>\n\taction(dataTypeKeys.SET_ACTIVE_POINTS_GROUP, payload);\n\nexport const setClusterCount = (payload: {\n\tpointsGroupId: number | undefined;\n\tclusterCount: number;\n}) => action(dataTypeKeys.SET_CLUSTER_COUNT, payload);\n\nexport const onRemoveUnsavedPointsGroups = () =>\n\taction(dataTypeKeys.REMOVE_SAVED_AND_PRIVATE_POINTS_GROUPS);\n"],"sourceRoot":""}